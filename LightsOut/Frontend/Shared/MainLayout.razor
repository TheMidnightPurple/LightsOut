@inherits LayoutComponentBase

@using Append.Blazor.Notifications;
@using LightsOut.Data;
;
@inject INotificationService NotificationService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject INotificacaoData _dbNotificacao;

<div class="page">
    <div class="sidebar"><NavMenu /></div>
    <div class="main">
        <div class="container">
            @Body
        </div>
    </div>
</div>

@code{
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender){
            
            TimerService.UpdateEvent += async date =>
            {
                await InvokeAsync(() =>
                {
                    StateHasChanged();
                });
            };
        }
        else{
            
            string username = await sessionStorage.GetItemAsync<string>("username");
            string res = await _dbNotificacao.sendNotification(username);

            if (res != "nothing")
            {
                var options = new NotificationOptions
                {
                    Body = "O GrandPrémio acabou de começar!",
                    Renotify = true
                };

                await NotificationService.CreateAsync(res, options);
            }
            
            
            TimerService.UpdateEvent += async date =>
            {
                await InvokeAsync(() =>
                {
                    StateHasChanged();
                });
            };
            
        }
    }

}